test deployment: curl -H "Server: 1" localhost:30001/echo


Set up Istio: https://istio.io/latest/docs/tasks/traffic-management/ingress/ingress-control/#before-you-begin

Set up Istio ingress: https://istio.io/latest/docs/tasks/traffic-management/ingress/ingress-control/

Set ingress ports for nodeport example:

export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
export TCP_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="tcp")].nodePort}')

Configure Ingress Host for local k3s workshop example:

export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')

validate config: env | grep INGRESS 

Create Istio Gateway:

kubectl apply -f istio-flask-gateway.yaml

Configure routes for traffic entering via the Gateway:

kubectl apply -f istio-flask-virtual-service.yaml

Test Istio:

curl -s -I -HHost:flask-server.com "http://$INGRESS_HOST:$INGRESS_PORT/echo"

Cleanup:

kubectl delete gateway flask-gateway
kubectl delete virtualservice flask-service
kubectl delete --ignore-not-found=true -f samples/httpbin/httpbin.yaml